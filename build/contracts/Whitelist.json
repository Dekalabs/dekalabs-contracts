{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "WhitelistedAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "WhitelistedAddressRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addAddressToWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "addAddressesToWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removeAddressFromWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "removeAddressesFromWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/seik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/seik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "2": "contracts/WhiteList.sol"
  },
  "ast": {
    "absolutePath": "contracts/WhiteList.sol",
    "exportedSymbols": {
      "Context": [
        288
      ],
      "Ownable": [
        267
      ],
      "Whitelist": [
        163
      ]
    },
    "id": 164,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:2"
      },
      {
        "absolutePath": "/home/seik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 164,
        "sourceUnit": 268,
        "src": "65:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 267,
              "src": "348:7:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "348:7:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "119:206:2",
          "text": " @title Whitelist\n @dev The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.\n @dev This simplifies the implementation of \"user permissions\"."
        },
        "fullyImplemented": true,
        "id": 163,
        "linearizedBaseContracts": [
          163,
          267,
          288
        ],
        "name": "Whitelist",
        "nameLocation": "335:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9b19251a",
            "id": 9,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "394:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "362:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "370:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "362:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "381:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 13,
            "name": "WhitelistedAddressAdded",
            "nameLocation": "416:23:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "448:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "440:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:14:2"
            },
            "src": "410:44:2"
          },
          {
            "anonymous": false,
            "id": 17,
            "name": "WhitelistedAddressRemoved",
            "nameLocation": "465:25:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "499:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "491:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:14:2"
            },
            "src": "459:46:2"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "622:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 21,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "640:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 24,
                        "indexExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "650:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "650:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "640:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "632:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "632:30:2"
                },
                {
                  "id": 27,
                  "nodeType": "PlaceholderStatement",
                  "src": "672:1:2"
                }
              ]
            },
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "511:79:2",
              "text": " @dev Throws if called by any account that's not whitelisted."
            },
            "id": 29,
            "name": "onlyWhitelisted",
            "nameLocation": "604:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:2:2"
            },
            "src": "595:85:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "1007:161:2",
              "statements": [
                {
                  "condition": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1021:16:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 39,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1022:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 41,
                      "indexExpression": {
                        "id": 40,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1032:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1022:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "nodeType": "IfStatement",
                  "src": "1017:145:2",
                  "trueBody": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1039:123:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 43,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1053:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 45,
                            "indexExpression": {
                              "id": 44,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1063:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1053:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1071:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1053:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1053:22:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 50,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1118:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49,
                            "name": "WhitelistedAddressAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1094:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "EmitStatement",
                        "src": "1089:34:2"
                      },
                      {
                        "expression": {
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1137:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1147:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1137:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 56,
                        "nodeType": "ExpressionStatement",
                        "src": "1137:14:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "686:203:2",
              "text": " @dev add an address to the whitelist\n @param addr address\n @return success true if the address was added to the whitelist, false if the address was already in the whitelist"
            },
            "functionSelector": "7b9417c8",
            "id": 60,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "962:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:9:2"
              }
            ],
            "name": "addAddressToWhitelist",
            "nameLocation": "903:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "933:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "925:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:14:2"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "994:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "989:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:14:2"
            },
            "scope": 163,
            "src": "894:274:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1530:167:2",
              "statements": [
                {
                  "body": {
                    "id": 93,
                    "nodeType": "Block",
                    "src": "1583:108:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 83,
                                "name": "addrs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "1623:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 85,
                              "indexExpression": {
                                "id": 84,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "1629:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1623:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 82,
                            "name": "addAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1601:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1601:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 92,
                        "nodeType": "IfStatement",
                        "src": "1597:84:2",
                        "trueBody": {
                          "id": 91,
                          "nodeType": "Block",
                          "src": "1634:47:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 87,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "1652:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 88,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1662:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1652:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 90,
                              "nodeType": "ExpressionStatement",
                              "src": "1652:14:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1560:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 76,
                        "name": "addrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1564:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1564:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1560:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 94,
                  "initializationExpression": {
                    "assignments": [
                      72
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1553:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 94,
                        "src": "1545:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1557:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1545:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1578:3:2",
                      "subExpression": {
                        "id": 79,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1578:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "nodeType": "ExpressionStatement",
                    "src": "1578:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1540:151:2"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "1174:224:2",
              "text": " @dev add addresses to the whitelist\n @param addrs addresses\n @return success true if at least one address was added to the whitelist,\n false if all addresses were already in the whitelist"
            },
            "functionSelector": "e2ec6ec3",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "1485:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1485:9:2"
              }
            ],
            "name": "addAddressesToWhitelist",
            "nameLocation": "1412:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "addrs",
                  "nameLocation": "1455:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1436:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1436:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63,
                    "nodeType": "ArrayTypeName",
                    "src": "1436:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:26:2"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1517:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1512:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:14:2"
            },
            "scope": 163,
            "src": "1403:294:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2059:163:2",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 106,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2073:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 108,
                    "indexExpression": {
                      "id": 107,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2083:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2073:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 124,
                  "nodeType": "IfStatement",
                  "src": "2069:147:2",
                  "trueBody": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "2090:126:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 109,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "2104:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 111,
                            "indexExpression": {
                              "id": 110,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "2114:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2104:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2122:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2104:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 114,
                        "nodeType": "ExpressionStatement",
                        "src": "2104:23:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 116,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "2172:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 115,
                            "name": "WhitelistedAddressRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2146:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2146:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "EmitStatement",
                        "src": "2141:36:2"
                      },
                      {
                        "expression": {
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 119,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "2191:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2201:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2191:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "2191:14:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "1703:233:2",
              "text": " @dev remove an address from the whitelist\n @param addr address\n @return success true if the address was removed from the whitelist,\n false if the address wasn't in the whitelist in the first place"
            },
            "functionSelector": "286dd3f5",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "2014:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2014:9:2"
              }
            ],
            "name": "removeAddressFromWhitelist",
            "nameLocation": "1950:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1985:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "1977:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:14:2"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2046:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2041:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2040:14:2"
            },
            "scope": 163,
            "src": "1941:281:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2612:172:2",
              "statements": [
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "2665:113:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 149,
                                "name": "addrs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130,
                                "src": "2710:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 151,
                              "indexExpression": {
                                "id": 150,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138,
                                "src": "2716:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2710:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 148,
                            "name": "removeAddressFromWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2683:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2683:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 158,
                        "nodeType": "IfStatement",
                        "src": "2679:89:2",
                        "trueBody": {
                          "id": 157,
                          "nodeType": "Block",
                          "src": "2721:47:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 153,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "2739:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2749:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2739:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 156,
                              "nodeType": "ExpressionStatement",
                              "src": "2739:14:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 141,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2642:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 142,
                        "name": "addrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2646:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2646:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2642:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "initializationExpression": {
                    "assignments": [
                      138
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2635:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "2627:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 140,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2639:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2627:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2660:3:2",
                      "subExpression": {
                        "id": 145,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2660:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 147,
                    "nodeType": "ExpressionStatement",
                    "src": "2660:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2622:156:2"
                }
              ]
            },
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "2228:247:2",
              "text": " @dev remove addresses from the whitelist\n @param addrs addresses\n @return success true if at least one address was removed from the whitelist,\n false if all addresses weren't in the whitelist in the first place"
            },
            "functionSelector": "24953eaa",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 132,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "2567:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2567:9:2"
              }
            ],
            "name": "removeAddressesFromWhitelist",
            "nameLocation": "2489:28:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "addrs",
                  "nameLocation": "2537:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2518:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2518:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 129,
                    "nodeType": "ArrayTypeName",
                    "src": "2518:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:26:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2599:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2594:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:14:2"
            },
            "scope": 163,
            "src": "2480:304:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 164,
        "src": "326:2460:2",
        "usedErrors": []
      }
    ],
    "src": "40:2747:2"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61060b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e55780639b19251a14610100578063e2ec6ec314610123578063f2fde38b1461013657600080fd5b806324953eaa1461008d578063286dd3f5146100b5578063715018a6146100c85780637b9417c8146100d2575b600080fd5b6100a061009b3660046104ec565b610149565b60405190151581526020015b60405180910390f35b6100a06100c33660046104bc565b6101d5565b6100d061027f565b005b6100a06100e03660046104bc565b6102b5565b6000546040516001600160a01b0390911681526020016100ac565b6100a061010e3660046104bc565b60016020526000908152604090205460ff1681565b6100a06101313660046104ec565b610355565b6100d06101443660046104bc565b6103d1565b600080546001600160a01b0316331461017d5760405162461bcd60e51b815260040161017490610561565b60405180910390fd5b60005b828110156101ce576101b284848381811061019d5761019d6105bf565b90506020020160208101906100c391906104bc565b156101bc57600191505b806101c681610596565b915050610180565b5092915050565b600080546001600160a01b031633146102005760405162461bcd60e51b815260040161017490610561565b6001600160a01b03821660009081526001602052604090205460ff161561027a576001600160a01b038216600081815260016020908152604091829020805460ff1916905590519182527ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a91015b60405180910390a15060015b919050565b6000546001600160a01b031633146102a95760405162461bcd60e51b815260040161017490610561565b6102b3600061046c565b565b600080546001600160a01b031633146102e05760405162461bcd60e51b815260040161017490610561565b6001600160a01b03821660009081526001602052604090205460ff1661027a576001600160a01b038216600081815260016020818152604092839020805460ff191690921790915590519182527fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f910161026e565b600080546001600160a01b031633146103805760405162461bcd60e51b815260040161017490610561565b60005b828110156101ce576103b58484838181106103a0576103a06105bf565b90506020020160208101906100e091906104bc565b156103bf57600191505b806103c981610596565b915050610383565b6000546001600160a01b031633146103fb5760405162461bcd60e51b815260040161017490610561565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610174565b6104698161046c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104ce57600080fd5b81356001600160a01b03811681146104e557600080fd5b9392505050565b600080602083850312156104ff57600080fd5b823567ffffffffffffffff8082111561051757600080fd5b818501915085601f83011261052b57600080fd5b81358181111561053a57600080fd5b8660208260051b850101111561054f57600080fd5b60209290920196919550909350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006000198214156105b857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220310a1c2de7942117a7675bb0a05678b7244e11635754026769e2cefdda5fa68064736f6c63430008060033",
  "bytecodeSha1": "8b2d01aea9605d3ead49354685a58ac2404e867e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Whitelist",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "20": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Whitelist.addAddressToWhitelist": {
          "18": [
            1022,
            1037,
            false
          ]
        },
        "Whitelist.addAddressesToWhitelist": {
          "19": [
            1601,
            1632,
            false
          ]
        },
        "Whitelist.removeAddressFromWhitelist": {
          "17": [
            2073,
            2088,
            false
          ]
        },
        "Whitelist.removeAddressesFromWhitelist": {
          "16": [
            2683,
            2719,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "14": [
            2131,
            2148
          ],
          "15": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "7": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1926,
            1999
          ],
          "13": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "2": {
        "Whitelist.addAddressToWhitelist": {
          "8": [
            1053,
            1075
          ],
          "9": [
            1089,
            1123
          ]
        },
        "Whitelist.addAddressesToWhitelist": {
          "10": [
            1652,
            1666
          ],
          "11": [
            1578,
            1581
          ]
        },
        "Whitelist.removeAddressFromWhitelist": {
          "4": [
            2104,
            2127
          ],
          "5": [
            2141,
            2177
          ],
          "6": [
            2191,
            2205
          ]
        },
        "Whitelist.removeAddressesFromWhitelist": {
          "2": [
            2739,
            2753
          ],
          "3": [
            2660,
            2663
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e55780639b19251a14610100578063e2ec6ec314610123578063f2fde38b1461013657600080fd5b806324953eaa1461008d578063286dd3f5146100b5578063715018a6146100c85780637b9417c8146100d2575b600080fd5b6100a061009b3660046104ec565b610149565b60405190151581526020015b60405180910390f35b6100a06100c33660046104bc565b6101d5565b6100d061027f565b005b6100a06100e03660046104bc565b6102b5565b6000546040516001600160a01b0390911681526020016100ac565b6100a061010e3660046104bc565b60016020526000908152604090205460ff1681565b6100a06101313660046104ec565b610355565b6100d06101443660046104bc565b6103d1565b600080546001600160a01b0316331461017d5760405162461bcd60e51b815260040161017490610561565b60405180910390fd5b60005b828110156101ce576101b284848381811061019d5761019d6105bf565b90506020020160208101906100c391906104bc565b156101bc57600191505b806101c681610596565b915050610180565b5092915050565b600080546001600160a01b031633146102005760405162461bcd60e51b815260040161017490610561565b6001600160a01b03821660009081526001602052604090205460ff161561027a576001600160a01b038216600081815260016020908152604091829020805460ff1916905590519182527ff1abf01a1043b7c244d128e8595cf0c1d10743b022b03a02dffd8ca3bf729f5a91015b60405180910390a15060015b919050565b6000546001600160a01b031633146102a95760405162461bcd60e51b815260040161017490610561565b6102b3600061046c565b565b600080546001600160a01b031633146102e05760405162461bcd60e51b815260040161017490610561565b6001600160a01b03821660009081526001602052604090205460ff1661027a576001600160a01b038216600081815260016020818152604092839020805460ff191690921790915590519182527fd1bba68c128cc3f427e5831b3c6f99f480b6efa6b9e80c757768f6124158cc3f910161026e565b600080546001600160a01b031633146103805760405162461bcd60e51b815260040161017490610561565b60005b828110156101ce576103b58484838181106103a0576103a06105bf565b90506020020160208101906100e091906104bc565b156103bf57600191505b806103c981610596565b915050610383565b6000546001600160a01b031633146103fb5760405162461bcd60e51b815260040161017490610561565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610174565b6104698161046c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104ce57600080fd5b81356001600160a01b03811681146104e557600080fd5b9392505050565b600080602083850312156104ff57600080fd5b823567ffffffffffffffff8082111561051757600080fd5b818501915085601f83011261052b57600080fd5b81358181111561053a57600080fd5b8660208260051b850101111561054f57600080fd5b60209290920196919550909350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006000198214156105b857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220310a1c2de7942117a7675bb0a05678b7244e11635754026769e2cefdda5fa68064736f6c63430008060033",
  "deployedSourceMap": "326:2460:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:304;;;;;;:::i;:::-;;:::i;:::-;;;1298:14:3;;1291:22;1273:41;;1261:2;1246:18;2480:304:2;;;;;;;;1941:281;;;;;;:::i;:::-;;:::i;1605:92:0:-;;;:::i;:::-;;894:274:2;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;1071:51:3;;1059:2;1044:18;973:85:0;1026:102:3;362:41:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1403:294;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;2480:304:2:-;2594:12;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;2627:9:2::1;2622:156;2642:16:::0;;::::1;2622:156;;;2683:36;2710:5;;2716:1;2710:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;2683:36::-;2679:89;;;2749:4;2739:14;;2679:89;2660:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2622:156;;;;2480:304:::0;;;;:::o;1941:281::-;2041:12;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2073:15:2;::::1;;::::0;;;:9:::1;:15;::::0;;;;;::::1;;2069:147;;;-1:-1:-1::0;;;;;2104:15:2;::::1;2122:5;2104:15:::0;;;:9:::1;:15;::::0;;;;;;;;:23;;-1:-1:-1;;2104:23:2::1;::::0;;2146:31;;1071:51:3;;;2146:31:2::1;::::0;1044:18:3;2146:31:2::1;;;;;;;;-1:-1:-1::0;2201:4:2::1;2069:147;1941:281:::0;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;894:274:2:-;989:12;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1022:15:2;::::1;;::::0;;;:9:::1;:15;::::0;;;;;::::1;;1017:145;;-1:-1:-1::0;;;;;1053:15:2;::::1;;::::0;;;1071:4:::1;1053:15;::::0;;;;;;;;:22;;-1:-1:-1;;1053:22:2::1;::::0;;::::1;::::0;;;1094:29;;1071:51:3;;;1094:29:2::1;::::0;1044:18:3;1094:29:2::1;1026:102:3::0;1403:294:2;1512:12;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1545:9:2::1;1540:151;1560:16:::0;;::::1;1540:151;;;1601:31;1623:5;;1629:1;1623:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;1601:31::-;1597:84;;;1662:4;1652:14;;1597:84;1578:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1540:151;;1846:189:0::0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;1527:2:3;1926:73:0::1;::::0;::::1;1509:21:3::0;1566:2;1546:18;;;1539:30;1605:34;1585:18;;;1578:62;-1:-1:-1;;;1656:18:3;;;1649:36;1702:19;;1926:73:0::1;1499:228:3::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:3:o;305:615::-;391:6;399;452:2;440:9;431:7;427:23;423:32;420:2;;;468:1;465;458:12;420:2;508:9;495:23;537:18;578:2;570:6;567:14;564:2;;;594:1;591;584:12;564:2;632:6;621:9;617:22;607:32;;677:7;670:4;666:2;662:13;658:27;648:2;;699:1;696;689:12;648:2;739;726:16;765:2;757:6;754:14;751:2;;;781:1;778;771:12;751:2;834:7;829:2;819:6;816:1;812:14;808:2;804:23;800:32;797:45;794:2;;;855:1;852;845:12;794:2;886;878:11;;;;;908:6;;-1:-1:-1;410:510:3;;-1:-1:-1;;;;410:510:3:o;1732:356::-;1934:2;1916:21;;;1953:18;;;1946:30;2012:34;2007:2;1992:18;;1985:62;2079:2;2064:18;;1906:182::o;2093:232::-;2132:3;-1:-1:-1;;2153:17:3;;2150:2;;;2212:10;2207:3;2203:20;2200:1;2193:31;2247:4;2244:1;2237:15;2275:4;2272:1;2265:15;2150:2;-1:-1:-1;2317:1:3;2306:13;;2140:185::o;2330:127::-;2391:10;2386:3;2382:20;2379:1;2372:31;2422:4;2419:1;2412:15;2446:4;2443:1;2436:15",
  "language": "Solidity",
  "natspec": {
    "details": "The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.This simplifies the implementation of \"user permissions\".",
    "kind": "dev",
    "methods": {
      "addAddressToWhitelist(address)": {
        "details": "add an address to the whitelist",
        "params": {
          "addr": "address"
        },
        "returns": {
          "success": "true if the address was added to the whitelist, false if the address was already in the whitelist"
        }
      },
      "addAddressesToWhitelist(address[])": {
        "details": "add addresses to the whitelist",
        "params": {
          "addrs": "addresses"
        },
        "returns": {
          "success": "true if at least one address was added to the whitelist, false if all addresses were already in the whitelist"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAddressFromWhitelist(address)": {
        "details": "remove an address from the whitelist",
        "params": {
          "addr": "address"
        },
        "returns": {
          "success": "true if the address was removed from the whitelist, false if the address wasn't in the whitelist in the first place"
        }
      },
      "removeAddressesFromWhitelist(address[])": {
        "details": "remove addresses from the whitelist",
        "params": {
          "addrs": "addresses"
        },
        "returns": {
          "success": "true if at least one address was removed from the whitelist, false if all addresses weren't in the whitelist in the first place"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Whitelist",
    "version": 1
  },
  "offset": [
    326,
    2786
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xE2EC6EC3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24953EAA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x286DD3F5 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7B9417C8 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x27F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CE JUMPI PUSH2 0x1B2 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x19D JUMPI PUSH2 0x19D PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST ISZERO PUSH2 0x1BC JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1C6 DUP2 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x180 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x27A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF1ABF01A1043B7C244D128E8595CF0C1D10743B022B03A02DFFD8CA3BF729F5A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x0 PUSH2 0x46C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x27A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xD1BBA68C128CC3F427E5831B3C6F99F480B6EFA6B9E80C757768F6124158CC3F SWAP2 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CE JUMPI PUSH2 0x3B5 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x3A0 JUMPI PUSH2 0x3A0 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST ISZERO PUSH2 0x3BF JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x3C9 DUP2 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174 SWAP1 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x174 JUMP JUMPDEST PUSH2 0x469 DUP2 PUSH2 0x46C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x5B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE EXP SHR 0x2D 0xE7 SWAP5 0x21 OR 0xA7 PUSH8 0x5BB0A05678B7244E GT PUSH4 0x57540267 PUSH10 0xE2CEFDDA5FA68064736F PUSH13 0x63430008060033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5"
    },
    "53": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9B19251A"
    },
    "60": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "64": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE2EC6EC3"
    },
    "71": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "75": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "86": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "REVERT",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "93": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x24953EAA"
    },
    "98": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x286DD3F5"
    },
    "109": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5"
    },
    "113": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8"
    },
    "124": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7B9417C8"
    },
    "131": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2"
    },
    "135": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        326,
        2786
      ],
      "op": "REVERT",
      "path": "2"
    },
    "141": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "142": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "145": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B"
    },
    "148": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "149": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "151": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EC"
    },
    "154": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMP",
      "path": "2"
    },
    "155": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "156": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x149"
    },
    "159": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMP",
      "path": "2"
    },
    "160": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "161": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "163": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "ISZERO"
    },
    "166": {
      "op": "ISZERO"
    },
    "167": {
      "op": "DUP2"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "171": {
      "op": "ADD"
    },
    "172": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "173": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "175": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "176": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "DUP1",
      "path": "2"
    },
    "177": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "178": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "SUB",
      "path": "2"
    },
    "179": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "180": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "RETURN",
      "path": "2"
    },
    "181": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "182": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "185": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "188": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "189": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "191": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "194": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "jump": "i",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMP",
      "path": "2"
    },
    "195": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "196": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5"
    },
    "199": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "jump": "i",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMP",
      "path": "2"
    },
    "200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "207": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "STOP",
      "path": "0"
    },
    "210": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "211": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "214": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0"
    },
    "217": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "218": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "220": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "223": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        894,
        1168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "224": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "225": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B5"
    },
    "228": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        894,
        1168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "229": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "232": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "233": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "235": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "242": {
      "op": "SHL"
    },
    "243": {
      "op": "SUB"
    },
    "244": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "245": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "246": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "247": {
      "op": "DUP2"
    },
    "248": {
      "op": "MSTORE"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "251": {
      "op": "ADD"
    },
    "252": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "255": {
      "op": "JUMP"
    },
    "256": {
      "offset": [
        362,
        403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "257": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E"
    },
    "263": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "264": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "266": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "269": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        362,
        403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "270": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "275": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "276": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "278": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "279": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "280": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "281": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "283": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "284": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "285": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "286": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "288": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "AND",
      "path": "2"
    },
    "289": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "290": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "291": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "295": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "298": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "299": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "301": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EC"
    },
    "304": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        1403,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "305": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355"
    },
    "309": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        1403,
        1697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BC"
    },
    "323": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D1"
    },
    "328": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "329": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "330": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2594,
        2606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "DUP1",
      "path": "0"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "340": {
      "op": "SHL"
    },
    "341": {
      "op": "SUB"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "343": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "344": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "345": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D"
    },
    "348": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "349": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "351": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "360": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "361": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "363": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "364": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "367": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "368": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "371": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "372": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "377": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "378": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "379": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "380": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "381": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "382": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2627,
        2636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "384": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "385": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2642,
        2658
      ],
      "op": "DUP3",
      "path": "2"
    },
    "386": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2642,
        2658
      ],
      "op": "DUP2",
      "path": "2"
    },
    "387": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2642,
        2658
      ],
      "op": "LT",
      "path": "2"
    },
    "388": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "389": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "392": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "393": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2683,
        2719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2"
    },
    "396": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "397": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "398": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2716,
        2717
      ],
      "op": "DUP4",
      "path": "2"
    },
    "399": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "400": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "401": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "LT",
      "path": "2"
    },
    "402": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "405": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "406": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "409": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BF"
    },
    "412": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        2710,
        2718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "413": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "415": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "POP",
      "path": "2"
    },
    "416": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "418": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "MUL",
      "path": "2"
    },
    "419": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "ADD",
      "path": "2"
    },
    "420": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "422": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "423": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "ADD",
      "path": "2"
    },
    "424": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "425": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "428": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "429": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "430": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2710,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "433": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        2710,
        2718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "434": {
      "branch": 16,
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2683,
        2719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "435": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2679,
        2768
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "436": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2679,
        2768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC"
    },
    "439": {
      "branch": 16,
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2679,
        2768
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "440": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2749,
        2753
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "442": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "443": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2739,
        2753
      ],
      "op": "POP",
      "path": "2"
    },
    "444": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2679,
        2768
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 3
    },
    "446": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6"
    },
    "449": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "450": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "453": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "i",
      "offset": [
        2660,
        2663
      ],
      "op": "JUMP",
      "path": "2"
    },
    "454": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "456": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "POP",
      "path": "2"
    },
    "457": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2660,
        2663
      ],
      "op": "POP",
      "path": "2"
    },
    "458": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180"
    },
    "461": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "JUMP",
      "path": "2"
    },
    "462": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "463": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2622,
        2778
      ],
      "op": "POP",
      "path": "2"
    },
    "464": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "465": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "466": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "POP",
      "path": "2"
    },
    "467": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "offset": [
        2480,
        2784
      ],
      "op": "POP",
      "path": "2"
    },
    "468": {
      "fn": "Whitelist.removeAddressesFromWhitelist",
      "jump": "o",
      "offset": [
        2480,
        2784
      ],
      "op": "JUMP",
      "path": "2"
    },
    "469": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "470": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2041,
        2053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "op": "SUB"
    },
    "482": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "483": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "484": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "485": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200"
    },
    "488": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "489": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "491": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "498": {
      "op": "SHL"
    },
    "499": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "500": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "501": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "503": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "504": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "507": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "508": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "511": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "512": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "op": "SUB"
    },
    "521": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "DUP3",
      "path": "2"
    },
    "522": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "AND",
      "path": "2"
    },
    "523": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "525": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "526": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "DUP2",
      "path": "2"
    },
    "527": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "528": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "530": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "532": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "533": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "535": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "536": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "537": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "538": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "540": {
      "branch": 17,
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2073,
        2088
      ],
      "op": "AND",
      "path": "2"
    },
    "541": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2069,
        2216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "542": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2069,
        2216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "545": {
      "branch": 17,
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2069,
        2216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "op": "SUB"
    },
    "554": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 4
    },
    "555": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "AND",
      "path": "2"
    },
    "556": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2122,
        2127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "558": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "559": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "560": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "561": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "563": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "565": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "566": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "567": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "568": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "570": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "571": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "DUP3",
      "path": "2"
    },
    "572": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "573": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2119
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "574": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2127
      ],
      "op": "DUP1",
      "path": "2"
    },
    "575": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2127
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "578": {
      "op": "NOT"
    },
    "579": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2127
      ],
      "op": "AND",
      "path": "2"
    },
    "580": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "581": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2104,
        2127
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "582": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 5
    },
    "583": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "584": {
      "op": "SWAP2"
    },
    "585": {
      "op": "DUP3"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF1ABF01A1043B7C244D128E8595CF0C1D10743B022B03A02DFFD8CA3BF729F5A"
    },
    "620": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "625": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "626": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "DUP1",
      "path": "2"
    },
    "627": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "628": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "SUB",
      "path": "2"
    },
    "629": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "630": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2146,
        2177
      ],
      "op": "LOG1",
      "path": "2"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2201,
        2205
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "634": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        2069,
        2216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "636": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "637": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "offset": [
        1941,
        2222
      ],
      "op": "POP",
      "path": "2"
    },
    "638": {
      "fn": "Whitelist.removeAddressFromWhitelist",
      "jump": "o",
      "offset": [
        1941,
        2222
      ],
      "op": "JUMP",
      "path": "2"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "653": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "654": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "657": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "658": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "660": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "667": {
      "op": "SHL"
    },
    "668": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "669": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "670": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "672": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "676": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "680": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x2B3"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46C"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        894,
        1168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "694": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        989,
        1001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "DUP1",
      "path": "0"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "707": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "708": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "709": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "712": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "713": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "715": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "724": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "725": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "727": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "731": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "732": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "735": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "736": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "DUP3",
      "path": "2"
    },
    "746": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "AND",
      "path": "2"
    },
    "747": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "749": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "750": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "DUP2",
      "path": "2"
    },
    "751": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "752": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "754": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "756": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "757": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "759": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "760": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "761": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "762": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "764": {
      "branch": 18,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1022,
        1037
      ],
      "op": "AND",
      "path": "2"
    },
    "765": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1017,
        1162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "768": {
      "branch": 18,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1017,
        1162
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 8
    },
    "778": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "AND",
      "path": "2"
    },
    "779": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "781": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "782": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "783": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "784": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1071,
        1075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "786": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "788": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "789": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "790": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "791": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "793": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "794": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP4",
      "path": "2"
    },
    "795": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "796": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1068
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "797": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "798": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "799": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "801": {
      "op": "NOT"
    },
    "802": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "AND",
      "path": "2"
    },
    "803": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "804": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "805": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "OR",
      "path": "2"
    },
    "806": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "807": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "808": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1053,
        1075
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "809": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1094,
        1123
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 9
    },
    "810": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1094,
        1123
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "811": {
      "op": "SWAP2"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1094,
        1123
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xD1BBA68C128CC3F427E5831B3C6F99F480B6EFA6B9E80C757768F6124158CC3F"
    },
    "847": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1094,
        1123
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1094,
        1123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E"
    },
    "852": {
      "op": "JUMP"
    },
    "853": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1403,
        1697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "854": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1512,
        1524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "DUP1",
      "path": "0"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "867": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "868": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "869": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "872": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "873": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "875": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "884": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "885": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "888": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "895": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "896": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "897": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1545,
        1554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "899": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "900": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1560,
        1576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "901": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1560,
        1576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "902": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1560,
        1576
      ],
      "op": "LT",
      "path": "2"
    },
    "903": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "904": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "907": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "908": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1601,
        1632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B5"
    },
    "911": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1628
      ],
      "op": "DUP5",
      "path": "2"
    },
    "912": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1628
      ],
      "op": "DUP5",
      "path": "2"
    },
    "913": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1629,
        1630
      ],
      "op": "DUP4",
      "path": "2"
    },
    "914": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "915": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "916": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "LT",
      "path": "2"
    },
    "917": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A0"
    },
    "920": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "921": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A0"
    },
    "924": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BF"
    },
    "927": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        1623,
        1631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "928": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "929": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "930": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "POP",
      "path": "2"
    },
    "931": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "933": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "MUL",
      "path": "2"
    },
    "934": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "ADD",
      "path": "2"
    },
    "935": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "937": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "938": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "ADD",
      "path": "2"
    },
    "939": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "940": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0"
    },
    "943": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "944": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "945": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1623,
        1631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "948": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        1623,
        1631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "949": {
      "branch": 19,
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1601,
        1632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "950": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1597,
        1681
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "951": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1597,
        1681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BF"
    },
    "954": {
      "branch": 19,
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1597,
        1681
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "955": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1662,
        1666
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x1"
    },
    "957": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1652,
        1666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "958": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1652,
        1666
      ],
      "op": "POP",
      "path": "2"
    },
    "959": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1597,
        1681
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "960": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 11
    },
    "961": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9"
    },
    "964": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "DUP2",
      "path": "2"
    },
    "965": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "968": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "jump": "i",
      "offset": [
        1578,
        1581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "969": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "970": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "971": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "POP",
      "path": "2"
    },
    "972": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1578,
        1581
      ],
      "op": "POP",
      "path": "2"
    },
    "973": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x383"
    },
    "976": {
      "fn": "Whitelist.addAddressesToWhitelist",
      "offset": [
        1540,
        1691
      ],
      "op": "JUMP",
      "path": "2"
    },
    "977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "978": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "980": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "987": {
      "op": "SHL"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "991": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "992": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB"
    },
    "995": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "996": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "998": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1007": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1010": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1011": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1015": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "1018": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1029": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "1033": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1057": {
      "op": "DUP3"
    },
    "1058": {
      "op": "ADD"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1095": {
      "op": "DUP3"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "1119": {
      "op": "JUMP"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x469"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46C"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1132": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1133": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1135": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1136": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1146": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1147": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "op": "NOT"
    },
    "1157": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1158": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1159": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1160": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "1161": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1162": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1163": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1165": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1166": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1167": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1168": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1169": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1171": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1172": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1206": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1207": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1208": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1209": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1210": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1211": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1212": {
      "op": "JUMPDEST"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1217": {
      "op": "DUP3"
    },
    "1218": {
      "op": "DUP5"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "op": "SLT"
    },
    "1221": {
      "op": "ISZERO"
    },
    "1222": {
      "op": "PUSH2",
      "value": "0x4CE"
    },
    "1225": {
      "op": "JUMPI"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1228": {
      "op": "DUP1"
    },
    "1229": {
      "op": "REVERT"
    },
    "1230": {
      "op": "JUMPDEST"
    },
    "1231": {
      "op": "DUP2"
    },
    "1232": {
      "op": "CALLDATALOAD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "op": "DUP2"
    },
    "1242": {
      "op": "AND"
    },
    "1243": {
      "op": "DUP2"
    },
    "1244": {
      "op": "EQ"
    },
    "1245": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "1248": {
      "op": "JUMPI"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1251": {
      "op": "DUP1"
    },
    "1252": {
      "op": "REVERT"
    },
    "1253": {
      "op": "JUMPDEST"
    },
    "1254": {
      "op": "SWAP4"
    },
    "1255": {
      "op": "SWAP3"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "jump": "o",
      "op": "JUMP"
    },
    "1260": {
      "op": "JUMPDEST"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "DUP4"
    },
    "1267": {
      "op": "DUP6"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "SLT"
    },
    "1270": {
      "op": "ISZERO"
    },
    "1271": {
      "op": "PUSH2",
      "value": "0x4FF"
    },
    "1274": {
      "op": "JUMPI"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1277": {
      "op": "DUP1"
    },
    "1278": {
      "op": "REVERT"
    },
    "1279": {
      "op": "JUMPDEST"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "CALLDATALOAD"
    },
    "1282": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1291": {
      "op": "DUP1"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "GT"
    },
    "1294": {
      "op": "ISZERO"
    },
    "1295": {
      "op": "PUSH2",
      "value": "0x517"
    },
    "1298": {
      "op": "JUMPI"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "DUP1"
    },
    "1302": {
      "op": "REVERT"
    },
    "1303": {
      "op": "JUMPDEST"
    },
    "1304": {
      "op": "DUP2"
    },
    "1305": {
      "op": "DUP6"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "SWAP2"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "op": "DUP6"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1312": {
      "op": "DUP4"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "op": "SLT"
    },
    "1315": {
      "op": "PUSH2",
      "value": "0x52B"
    },
    "1318": {
      "op": "JUMPI"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1321": {
      "op": "DUP1"
    },
    "1322": {
      "op": "REVERT"
    },
    "1323": {
      "op": "JUMPDEST"
    },
    "1324": {
      "op": "DUP2"
    },
    "1325": {
      "op": "CALLDATALOAD"
    },
    "1326": {
      "op": "DUP2"
    },
    "1327": {
      "op": "DUP2"
    },
    "1328": {
      "op": "GT"
    },
    "1329": {
      "op": "ISZERO"
    },
    "1330": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1333": {
      "op": "JUMPI"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1336": {
      "op": "DUP1"
    },
    "1337": {
      "op": "REVERT"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "DUP7"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1342": {
      "op": "DUP3"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "op": "DUP6"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "ADD"
    },
    "1349": {
      "op": "GT"
    },
    "1350": {
      "op": "ISZERO"
    },
    "1351": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1354": {
      "op": "JUMPI"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1357": {
      "op": "DUP1"
    },
    "1358": {
      "op": "REVERT"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1362": {
      "op": "SWAP3"
    },
    "1363": {
      "op": "SWAP1"
    },
    "1364": {
      "op": "SWAP3"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "SWAP7"
    },
    "1367": {
      "op": "SWAP2"
    },
    "1368": {
      "op": "SWAP6"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "op": "SWAP1"
    },
    "1371": {
      "op": "SWAP4"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "op": "POP"
    },
    "1376": {
      "jump": "o",
      "op": "JUMP"
    },
    "1377": {
      "op": "JUMPDEST"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1380": {
      "op": "DUP1"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "DUP2"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1422": {
      "op": "DUP3"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "MSTORE"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "SWAP1"
    },
    "1429": {
      "jump": "o",
      "op": "JUMP"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1435": {
      "op": "NOT"
    },
    "1436": {
      "op": "DUP3"
    },
    "1437": {
      "op": "EQ"
    },
    "1438": {
      "op": "ISZERO"
    },
    "1439": {
      "op": "PUSH2",
      "value": "0x5B8"
    },
    "1442": {
      "op": "JUMPI"
    },
    "1443": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1458": {
      "op": "MSTORE"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1463": {
      "op": "REVERT"
    },
    "1464": {
      "op": "JUMPDEST"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "SWAP1"
    },
    "1470": {
      "jump": "o",
      "op": "JUMP"
    },
    "1471": {
      "op": "JUMPDEST"
    },
    "1472": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1479": {
      "op": "SHL"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1492": {
      "op": "REVERT"
    }
  },
  "sha1": "b6926f353b396db4db1f03d7eb16d49e2cd04ec7",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Whitelist\n * @dev The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.\n * @dev This simplifies the implementation of \"user permissions\".\n */\ncontract Whitelist is Ownable {\n    mapping(address => bool) public whitelist;\n\n    event WhitelistedAddressAdded(address addr);\n    event WhitelistedAddressRemoved(address addr);\n\n    /**\n     * @dev Throws if called by any account that's not whitelisted.\n     */\n    modifier onlyWhitelisted() {\n        require(whitelist[msg.sender]);\n        _;\n    }\n\n    /**\n     * @dev add an address to the whitelist\n     * @param addr address\n     * @return success true if the address was added to the whitelist, false if the address was already in the whitelist\n     */\n    function addAddressToWhitelist(address addr)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        if (!whitelist[addr]) {\n            whitelist[addr] = true;\n            emit WhitelistedAddressAdded(addr);\n            success = true;\n        }\n    }\n\n    /**\n     * @dev add addresses to the whitelist\n     * @param addrs addresses\n     * @return success true if at least one address was added to the whitelist,\n     * false if all addresses were already in the whitelist\n     */\n    function addAddressesToWhitelist(address[] calldata addrs)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (addAddressToWhitelist(addrs[i])) {\n                success = true;\n            }\n        }\n    }\n\n    /**\n     * @dev remove an address from the whitelist\n     * @param addr address\n     * @return success true if the address was removed from the whitelist,\n     * false if the address wasn't in the whitelist in the first place\n     */\n    function removeAddressFromWhitelist(address addr)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        if (whitelist[addr]) {\n            whitelist[addr] = false;\n            emit WhitelistedAddressRemoved(addr);\n            success = true;\n        }\n    }\n\n    /**\n     * @dev remove addresses from the whitelist\n     * @param addrs addresses\n     * @return success true if at least one address was removed from the whitelist,\n     * false if all addresses weren't in the whitelist in the first place\n     */\n    function removeAddressesFromWhitelist(address[] calldata addrs)\n        public\n        onlyOwner\n        returns (bool success)\n    {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (removeAddressFromWhitelist(addrs[i])) {\n                success = true;\n            }\n        }\n    }\n}\n",
  "sourceMap": "326:2460:2:-:0;;;;;;;;;;;;-1:-1:-1;867:23:0;665:10:1;867:9:0;:23::i;:::-;326:2460:2;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;326:2460:2:-;;;;;;;",
  "sourcePath": "contracts/WhiteList.sol",
  "type": "contract"
}